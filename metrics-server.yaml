
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: metrics-server
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregated-metrics-reader
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: metrics-server
  name: system:metrics-server
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - nodes/stats
  - namespaces
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: metrics-server
  name: system:metrics-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:metrics-server
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server
  namespace: kube-system
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    k8s-app: metrics-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: metrics-server
  name: metrics-server
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        k8s-app: metrics-server
    spec:
      serviceAccountName: metrics-server
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      containers:
      - name: metrics-server
        image: k8s.gcr.io/metrics-server/metrics-server:v0.5.2
        imagePullPolicy: IfNotPresent
        args:
          # - --kubelet-insecure-tls    # Needed for single node cluster
          # - --cert-dir=/cert
          - --secure-port=4443
          - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          # # USE WHEN --kubelet-insecure-tls is FALSE
          # - --kubeconfig=/cert/kubeconfig
          # - --kubelet-preferred-address-types=InternalDNS,InternalIP,ExternalDNS,ExternalIP,Hostname
          # - --kubelet-use-node-status-port 
          # - --kubelet-certificate-authority=/cert/client-ca-file
          # - --kubelet-client-certificate=/cert/client.crt
          # - --kubelet-client-key=/cert/client.key
          # - --bind-address=0.0.0.0
          # - --cert-dir=/cert
          # - --secure-port=4443
          # - --authentication-kubeconfig=/cert/kubeconfig
          # - --requestheader-client-ca-file=/cert/client.crt
          # - --requestheader-allowed-names=aggregator
          # - --requestheader-extra-headers-prefix=X-Remote-Extra-
          # - --requestheader-group-headers=X-Remote-Group
          # - --requestheader-username-headers=X-Remote-User
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          periodSeconds: 10
        ports:
        - containerPort: 4443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
          limits:
            cpu: 500m
            memory: 2048Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        # - mountPath: /cert
        #   name: cert-dir
          # readOnly: true
        - name: kube-api-access
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount      
          readOnly: true
      enableServiceLinks: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      volumes:
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
      # - name: cert-dir
      #   configMap:
      #     name: ext-apiserver-auth
      #     items:
      #     - key: ca.crt
      #       path: ca.crt
      #     - key: apiserver.crt
      #       path: apiserver.crt
      #     - key: apiserver.key
      #       path: apiserver.key
      #     - key: client.crt
      #       path: client.crt
      #     - key: client.key
      #       path: client.key
          # - key: requestheader-allowed-names
          #   path: requestheader-allowed-names
          # - key: requestheader-client-ca-file
          #   path: requestheader-client-ca-file
          # - key: requestheader-extra-headers-prefix
          #   path: requestheader-extra-headers-prefix
          # - key: requestheader-group-headers
          #   path: requestheader-group-headers
          # - key: requestheader-username-headers
          #   path: requestheader-username-headers
      # - name: kube-api-access-ktb5n
      #   projected:
      #     defaultMode: 420
      #     sources:
      #     - serviceAccountToken:
      #         expirationSeconds: 3607
      #         path: token
      #     - configMap:
      #         items:
      #         - key: ca.crt
      #           path: ca.crt
      #         name: kube-root-ca.crt
      #     - downwardAPI:
      #         items:
      #         - fieldRef:
      #             apiVersion: v1
      #             fieldPath: metadata.namespace
      #           path: namespace

---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  labels:
    k8s-app: metrics-server
  name: v1beta1.metrics.k8s.io
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: metrics-server
    namespace: kube-system
  version: v1beta1
  versionPriority: 100
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
spec:
  maxReplicas: 2
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: metrics-server
  targetCPUUtilizationPercentage: 25
status:
  observedGeneration: 1
  currentReplicas: 1
  desiredReplicas: 1